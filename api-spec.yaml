openapi: 3.0.0
info:
  title: Blog API
  version: 1.1.0
paths:
  /api/blog-posts/createBlogPosts:
    post:
      summary: Create a blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request/BlogPost"
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response/BlogPostResponse"
  /api/blog-posts/findAllBlogPosts:
    get:
      summary: Retrieve all blog posts
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 0
          description: Page number
        - in: query
          name: size
          schema:
            type: integer
            default: 25
          description: Number of items per page
        - in: query
          name: sort_by
          schema:
            type: array
            items:
              type: string
          description: Sort order (e.g., id:asc, title:desc)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response/BlogPostResponse"
  /api/blog-posts/{id}:
    get:
      summary: Retrieve a blog post by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the blog post
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response/BlogPostResponse"
        "404":
          description: Not Found
    put:
      summary: Update a blog post by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the blog post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/request/BlogPost"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/response/BlogPostResponse"
        "404":
          description: Not Found
    delete:
      summary: Delete a blog post by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the blog post
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
components:
  schemas:
    request:
      BlogPost:
        type: object
        properties:
          title:
            type: string
          body:
            type: string
          author:
            type: string
    response:
      BlogPostResponse:
        type: object
        properties:
          statusCode:
            type: integer
          message:
            type: string
          infoData:
            type: object
            additionalProperties:
              type: object
          data:
            type: array
            items:
              $ref: "#/components/schemas/response/BlogPostEntity"
      BlogPostEntity:
        type: object
        properties:
          id:
            type: integer
          title:
            type: string
          body:
            type: string
          author:
            type: string
